// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Task {
  id          String    @id @default(cuid())
  title       String
  description String?
  priority    Priority  @default(MEDIUM)
  status      TaskStatus @default(PENDING)
  dueDate     DateTime?
  categoryId  String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  completedAt DateTime?
  isRecurring   Boolean        @default(false)
  recurrenceType RecurrenceType?
  recurrenceDays String?        // JSON string of days for weekly recurrence (e.g., "1,2,3" for Monday, Tuesday, Wednesday)
  parentTaskId  String?        // For recurring task instances
  category      Category?      @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  histories     TaskHistory[]
  parentTask    Task?          @relation("TaskRecurring", fields: [parentTaskId], references: [id])
  childTasks    Task[]         @relation("TaskRecurring")
}

model Category {
  id          String   @id @default(cuid())
  name        String   @unique
  color       String   @default("#6B7280")
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  tasks       Task[]
}

model TaskHistory {
  id          String       @id @default(cuid())
  taskId      String
  action      HistoryAction
  oldStatus   TaskStatus?
  newStatus   TaskStatus?
  description String?
  createdAt   DateTime     @default(now())
  task        Task         @relation(fields: [taskId], references: [id], onDelete: Cascade)
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

enum TaskStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

enum HistoryAction {
  CREATED
  UPDATED
  COMPLETED
  CANCELLED
  DELETED
}

enum RecurrenceType {
  DAILY
  WEEKLY
}